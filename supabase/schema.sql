-- Create table to store startup partner inquiries
create table if not exists public.startup_contacts (
  id bigint generated by default as identity primary key,
  created_at timestamptz not null default now(),
  company text not null,
  contact_name text,
  contact_email text not null,
  website text,
  hiring_types text[],
  message text,
  source_section text default 'career_fair'
);

-- Enable Row Level Security
alter table public.startup_contacts enable row level security;

-- By default with RLS, no access is allowed. Create policy to allow anonymous inserts only.
drop policy if exists "Allow anon insert" on public.startup_contacts;
create policy "Allow anon insert"
  on public.startup_contacts
  for insert
  to anon
  with check (true);

-- (Optional) Allow authenticated users to read their own submissions if you add user_id later.
-- No select/update/delete policies are added, so anon cannot read/modify rows.

-- Mailing list emails captured from the Join section
create table if not exists public.join_emails (
  id bigint generated by default as identity primary key,
  created_at timestamptz not null default now(),
  email text not null,
  source text default 'join',
  constraint join_emails_email_check check (position('@' in email) > 1)
);

alter table public.join_emails enable row level security;

-- Avoid duplicate emails (case-insensitive)
create unique index if not exists join_emails_email_unique
  on public.join_emails (lower(email));

drop policy if exists "Allow anon insert (join_emails)" on public.join_emails;
create policy "Allow anon insert (join_emails)"
  on public.join_emails
  for insert
  to anon
  with check (true);
